
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author jigne
 */
public class PatientAppointmentScreen extends javax.swing.JFrame {

    ArrayList<Doctor> docdetail = DoctorDirectory.arrayReturn();
    ArrayList<Patients> patientDirectory = PatientDirectory.arrayReturn();
    

    /**
     * Creates new form PatientAppointmentScreen
     */
    public PatientAppointmentScreen() {
        initComponents();
        DefaultComboBoxModel dml = new DefaultComboBoxModel();
        for (Doctor doctor : docdetail) {
            dml.addElement(doctor.name);
        }
        int tempId = PatientLoginScreen.pID;
        DoctorComboBox.setModel(dml);
        PatientIdField.setText(String.valueOf(PatientLoginScreen.pID));
        PatientEmailField.setText(PatientLoginScreen.pEmail);
        for (Patients patient : patientDirectory) {
            if (tempId == patient.id) {
                PatientNameField.setText(patient.name);
            }
        }
        int tempappId = AppointmentDirectory.arrayListLength();
        BookingIDText.setText(String.valueOf(tempappId));
        AppointmentDirectory.addArrayListItem(1,1,"Jash","jash@gmail.com","Jubin","Headache","09/09/2022","6:15 AM");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        BookAppointmentButton = new javax.swing.JButton();
        CancelAppointmentButton = new javax.swing.JButton();
        ParentPanel = new javax.swing.JPanel();
        BookAppointmentPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        BookingIDText = new javax.swing.JTextField();
        PatientNameField = new javax.swing.JTextField();
        PatientEmailField = new javax.swing.JTextField();
        DoctorComboBox = new javax.swing.JComboBox<>();
        AppointmentReasonText = new javax.swing.JTextField();
        AppointmentTimeText = new javax.swing.JFormattedTextField();
        BookButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        PatientIdField = new javax.swing.JTextField();
        AppointmentDateText = new javax.swing.JTextField();
        CancelAppointmentPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DisplayAppointmentsTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        deleteID = new javax.swing.JTextField();
        DeleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setText("Apointments ");

        BookAppointmentButton.setText("Book");
        BookAppointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookAppointmentButtonActionPerformed(evt);
            }
        });

        CancelAppointmentButton.setText("Cancel");
        CancelAppointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelAppointmentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CancelAppointmentButton)
                    .addComponent(BookAppointmentButton)
                    .addComponent(jLabel1))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(60, 60, 60)
                .addComponent(BookAppointmentButton)
                .addGap(65, 65, 65)
                .addComponent(CancelAppointmentButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ParentPanel.setBackground(new java.awt.Color(255, 255, 255));
        ParentPanel.setLayout(new java.awt.CardLayout());

        BookAppointmentPanel.setBackground(new java.awt.Color(153, 153, 153));

        jLabel2.setText("BOOK APPOINTMENT FORM");

        jLabel3.setText("Booking ID:");

        jLabel4.setText("Patient Name:");

        jLabel5.setText("Patient Email:");

        jLabel6.setText("Select Doctor:");

        jLabel7.setText("Appoinment For:");

        jLabel8.setText("Date:");

        jLabel9.setText("Time:");

        BookingIDText.setEditable(false);

        PatientNameField.setEditable(false);

        PatientEmailField.setEditable(false);

        DoctorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoctorComboBoxActionPerformed(evt);
            }
        });

        AppointmentTimeText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        BookButton.setText("BOOK");
        BookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Patient ID:");

        PatientIdField.setEditable(false);
        PatientIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientIdFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BookAppointmentPanelLayout = new javax.swing.GroupLayout(BookAppointmentPanel);
        BookAppointmentPanel.setLayout(BookAppointmentPanelLayout);
        BookAppointmentPanelLayout.setHorizontalGroup(
            BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookAppointmentPanelLayout.createSequentialGroup()
                .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookAppointmentPanelLayout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(BookButton))
                    .addGroup(BookAppointmentPanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel3)))
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PatientNameField)
                            .addComponent(AppointmentTimeText)
                            .addComponent(AppointmentReasonText)
                            .addComponent(DoctorComboBox, 0, 123, Short.MAX_VALUE)
                            .addComponent(PatientEmailField)
                            .addComponent(BookingIDText)
                            .addComponent(PatientIdField)
                            .addComponent(AppointmentDateText)))
                    .addGroup(BookAppointmentPanelLayout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel2)))
                .addContainerGap(385, Short.MAX_VALUE))
        );
        BookAppointmentPanelLayout.setVerticalGroup(
            BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookAppointmentPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(BookingIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(PatientIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PatientNameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PatientEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DoctorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AppointmentReasonText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(AppointmentDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BookAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(AppointmentTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(BookButton)
                .addContainerGap())
        );

        ParentPanel.add(BookAppointmentPanel, "card2");

        CancelAppointmentPanel.setBackground(new java.awt.Color(204, 204, 255));

        DisplayAppointmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Booking ID", "Patient ID", "Patient Name", "Pateint Email", "Doctor Name", "Appointment For", "Booking Date", "Booking Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(DisplayAppointmentsTable);

        jLabel11.setText("Enter Booking ID:");

        deleteID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteIDActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CancelAppointmentPanelLayout = new javax.swing.GroupLayout(CancelAppointmentPanel);
        CancelAppointmentPanel.setLayout(CancelAppointmentPanelLayout);
        CancelAppointmentPanelLayout.setHorizontalGroup(
            CancelAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CancelAppointmentPanelLayout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DeleteButton)
                .addContainerGap(356, Short.MAX_VALUE))
            .addGroup(CancelAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE))
        );
        CancelAppointmentPanelLayout.setVerticalGroup(
            CancelAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CancelAppointmentPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(CancelAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(deleteID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteButton))
                .addContainerGap(395, Short.MAX_VALUE))
            .addGroup(CancelAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CancelAppointmentPanelLayout.createSequentialGroup()
                    .addContainerGap(67, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(11, Short.MAX_VALUE)))
        );

        ParentPanel.add(CancelAppointmentPanel, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ParentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelAppointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelAppointmentButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) DisplayAppointmentsTable.getModel();
        tableModel.setRowCount(0);
        ArrayList<Appointments> appointmentDirectory = AppointmentDirectory.arrayReturn();
        for (int i = 0; i < AppointmentDirectory.arrayListLength(); i++) {
            Object[] rowData = new Object[]{
                appointmentDirectory.get(i).id,
                appointmentDirectory.get(i).patientID,
                appointmentDirectory.get(i).patientName,
                appointmentDirectory.get(i).patientEmail,
                appointmentDirectory.get(i).appointmentDoctor,
                appointmentDirectory.get(i).reason,
                appointmentDirectory.get(i).date,
                appointmentDirectory.get(i).time,};
            tableModel.addRow(rowData);
        }
        ParentPanel.removeAll();
        ParentPanel.add(CancelAppointmentPanel);
        ParentPanel.repaint();
        ParentPanel.revalidate();
    }//GEN-LAST:event_CancelAppointmentButtonActionPerformed

    private void BookAppointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookAppointmentButtonActionPerformed
        // TODO add your handling code here:
        ParentPanel.removeAll();
        ParentPanel.add(BookAppointmentPanel);
        ParentPanel.repaint();
        ParentPanel.revalidate();
    }//GEN-LAST:event_BookAppointmentButtonActionPerformed

    private void BookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookButtonActionPerformed
        // TODO add your handling code here:
        int patientID = Integer.parseInt(PatientIdField.getText());
        String patientName = PatientNameField.getText();
        String patientEmail = PatientEmailField.getText();
        String appointmentDoctor = DoctorComboBox.getSelectedItem().toString();
        String reason = AppointmentReasonText.getText();
        String date = AppointmentDateText.getText();
        String time = AppointmentTimeText.getText();

        String regex_date = "^[0-3]?[0-9]/[0-3]?[0-9]/(?:[0-9]{2})?[0-9]{2}$";

        if (reason.isEmpty() || date.isEmpty() || time.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter All Details");
        } else if (!date.matches(regex_date)) {
            JOptionPane.showMessageDialog(this, "Enter Valid Date");
        } else {
            int id = AppointmentDirectory.arrayListLength();

            AppointmentDirectory.addArrayListItem(id, patientID, patientName, patientEmail, appointmentDoctor, reason, date, time);
            JOptionPane.showMessageDialog(this, "Appointment Added Successfully", "Warning",
                    JOptionPane.ERROR_MESSAGE);
            BookingIDText.setText(String.valueOf(DoctorDirectory.arrayListLength()));
            AppointmentReasonText.setText("");
            AppointmentDateText.setText("");
            AppointmentTimeText.setText("");

        }

    }//GEN-LAST:event_BookButtonActionPerformed

    private void DoctorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DoctorComboBoxActionPerformed

    private void PatientIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientIdFieldActionPerformed

    private void deleteIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteIDActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        String del = deleteID.getText();
        boolean found = false;
        if (del.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Fill All The Fields", "Warning",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            for (Appointments appointment : AppointmentDirectory.arrayReturn()) {
                if (String.valueOf(appointment.id).equals(del)) {
                    AppointmentDirectory.arrayReturn().remove(appointment);
                    JOptionPane.showMessageDialog(this, "Doctor Deleted Successfully", "Warning",
                            JOptionPane.ERROR_MESSAGE);
                    found = true;
                    break;
                } else {
                    found=false;
                    JOptionPane.showMessageDialog(this, "Appointment does not exists", "Warning",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        if(found){
            DefaultTableModel tableModel = (DefaultTableModel) DisplayAppointmentsTable.getModel();
            
            for (int i = 0; i < DisplayAppointmentsTable.getRowCount(); i++) {
                if(DisplayAppointmentsTable.getValueAt(i, 0).toString().equals(del) ){
                    tableModel.removeRow(i);
                    BookingIDText.setText(String.valueOf(AppointmentDirectory.arrayListLength()));
                }
            }
        }
        deleteID.setText("");
    }//GEN-LAST:event_DeleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientAppointmentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientAppointmentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientAppointmentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientAppointmentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientAppointmentScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AppointmentDateText;
    private javax.swing.JTextField AppointmentReasonText;
    private javax.swing.JFormattedTextField AppointmentTimeText;
    private javax.swing.JButton BookAppointmentButton;
    private javax.swing.JPanel BookAppointmentPanel;
    private javax.swing.JButton BookButton;
    private javax.swing.JTextField BookingIDText;
    private javax.swing.JButton CancelAppointmentButton;
    private javax.swing.JPanel CancelAppointmentPanel;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTable DisplayAppointmentsTable;
    private javax.swing.JComboBox<String> DoctorComboBox;
    private javax.swing.JPanel ParentPanel;
    private javax.swing.JTextField PatientEmailField;
    private javax.swing.JTextField PatientIdField;
    private javax.swing.JTextField PatientNameField;
    private javax.swing.JTextField deleteID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
